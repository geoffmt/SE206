<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
typedef int[1,2] myID;

int has_cs=0;
const int C =4; 
const int CS =30;
const int delay = 3;
</declaration><template><name x="5" y="5">Process</name><parameter>const myID ID</parameter><declaration>// Place local declarations here.
clock sleeptime;// to model the sleep time
clock exec;// to model constraints on execution times
</declaration><location id="id0" x="520" y="168"><name x="544" y="160">waiting</name><label kind="invariant" x="536" y="136">sleeptime&lt;=delay</label></location><location id="id1" x="168" y="40"><name x="104" y="16">L3goto</name></location><location id="id2" x="256" y="376"><name x="280" y="368">End</name></location><location id="id3" x="256" y="248"><name x="176" y="224">L4toLk</name><label kind="invariant" x="280" y="240">exec&lt;CS</label></location><location id="id4" x="256" y="168"><name x="272" y="176">L3</name></location><location id="id5" x="512" y="-8"><name x="536" y="-40">L2</name><label kind="invariant" x="528" y="-8">exec&lt;C</label></location><location id="id6" x="376" y="-8"><name x="336" y="-16">L1</name><label kind="invariant" x="366" y="7">exec&lt;C</label></location><location id="id7" x="512" y="-88"><name x="536" y="-112">L0goto</name><label kind="invariant" x="520" y="-80">exec&lt;C</label></location><location id="id8" x="376" y="-88"><name x="366" y="-118">L0</name><label kind="invariant" x="304" y="-120">exec&lt;C</label></location><init ref="id8"/><transition><source ref="id1"/><target ref="id8"/><label kind="assignment" x="168" y="-88">exec=0</label><nail x="256" y="-96"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="assignment" x="264" y="296">has_cs=0</label></transition><transition><source ref="id0"/><target ref="id4"/><label kind="guard" x="328" y="144">sleeptime&gt;=delay</label></transition><transition><source ref="id5"/><target ref="id0"/><label kind="assignment" x="424" y="64">sleeptime=0</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="guard" x="160" y="184">has_cs==0</label><label kind="assignment" x="184" y="200">exec=0</label></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="216" y="80">has_cs!=ID</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="assignment" x="408" y="-40">has_cs=ID, 
exec=0</label></transition><transition><source ref="id8"/><target ref="id6"/><label kind="guard" x="288" y="-64">has_cs==0</label><label kind="assignment" x="304" y="-48">exec=0</label><nail x="376" y="-48"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="408" y="-88">has_cs!=0</label><label kind="assignment" x="408" y="-72">exec=0</label><nail x="392" y="-88"/></transition><transition><source ref="id7"/><target ref="id8"/><label kind="assignment" x="416" y="-184">exec=0</label><nail x="448" y="-168"/></transition></template><system>// This command is special it instanciate any 
// possible instance of Process with distinct parameters.
// As myID is in {1,2} there will be two instances. 
system Process;</system></nta>