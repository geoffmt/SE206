<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
typedef int[1,2] myID;

int has_cs=0;
const int C =4; 
const int CS =30;
const int delay = 3;
</declaration><template><name x="5" y="5">Process</name><parameter>const myID ID</parameter><declaration>// Place local declarations here.
clock sleeptime;// to model the sleep time
clock exec;// to model constraints on execution times
</declaration><location id="id0" x="1000" y="280"><name x="1024" y="272">waiting</name><label kind="invariant" x="1016" y="248">sleeptime&lt;=delay</label></location><location id="id1" x="648" y="152"><name x="584" y="128">L3goto</name></location><location id="id2" x="736" y="488"></location><location id="id3" x="736" y="360"><name x="664" y="352">L4toLk</name><label kind="invariant" x="760" y="352">exec&lt;CS</label></location><location id="id4" x="736" y="280"><name x="752" y="288">L3</name></location><location id="id5" x="992" y="104"><name x="1016" y="72">L2</name><label kind="invariant" x="1008" y="104">exec&lt;C</label></location><location id="id6" x="856" y="104"><name x="816" y="96">L1</name><label kind="invariant" x="832" y="120">exec&lt;C</label></location><location id="id7" x="992" y="24"><name x="1016" y="0">L0goto</name><label kind="invariant" x="1000" y="32">exec&lt;C</label></location><location id="id8" x="856" y="24"><name x="846" y="-6">L0</name><label kind="invariant" x="784" y="-8">exec&lt;C</label></location><init ref="id8"/><transition><source ref="id1"/><target ref="id8"/><label kind="assignment" x="648" y="24">exec=0</label><nail x="736" y="16"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="assignment" x="744" y="408">has_cs=0,
exec=0</label></transition><transition><source ref="id0"/><target ref="id4"/><label kind="guard" x="808" y="256">sleeptime&gt;=delay</label></transition><transition><source ref="id5"/><target ref="id0"/><label kind="assignment" x="904" y="176">sleeptime=0</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="guard" x="640" y="296">has_cs==ID</label><label kind="assignment" x="664" y="312">exec=0</label></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="696" y="192">has_cs!=ID</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="assignment" x="888" y="72">has_cs=ID, 
exec=0</label></transition><transition><source ref="id8"/><target ref="id6"/><label kind="guard" x="768" y="48">has_cs==0</label><label kind="assignment" x="784" y="64">exec=0</label><nail x="856" y="64"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="888" y="24">has_cs!=0</label><label kind="assignment" x="888" y="40">exec=0</label><nail x="872" y="24"/></transition><transition><source ref="id7"/><target ref="id8"/><label kind="assignment" x="896" y="-72">exec=0</label><nail x="928" y="-56"/></transition></template><system>// This command is special it instanciate any 
// possible instance of Process with distinct parameters.
// As myID is in {1,2} there will be two instances. 
system Process;</system></nta>